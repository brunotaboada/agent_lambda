plugins {
    id("io.micronaut.library") version "3.7.4"
    id("com.github.johnrengelman.shadow") version "7.1.2"
}

version = "0.1"
group = "agent_lambda"

repositories {
    mavenCentral()
}

configurations.all {
    resolutionStrategy {
        force 'software.amazon.awssdk:bom:2.20.27'
    }
}

dependencies {
    implementation("io.micronaut.aws:micronaut-aws-sdk-v2")
    implementation("com.amazonaws:aws-lambda-java-events")
    implementation("io.micronaut:micronaut-jackson-databind")
    implementation("jakarta.annotation:jakarta.annotation-api")
    implementation("com.github.mwiede:jsch:0.2.7")
    implementation("io.micronaut:micronaut-validation")
    implementation("software.amazon.awssdk:url-connection-client")
    implementation("io.micronaut.aws:micronaut-function-aws")
    implementation("io.micronaut.aws:micronaut-function-aws-custom-runtime")
    implementation("software.amazon.awssdk:apache-client")

    implementation('software.amazon.awssdk:ec2')
    implementation("software.amazon.awssdk:rds")
    implementation("software.amazon.awssdk:apache-client")
    implementation("software.amazon.awssdk:cloudwatch")
    implementation("org.apache.commons:commons-lang3:3.12.0")

    implementation("io.github.hengyunabc:zabbix-api:0.0.2")
    implementation("io.github.hengyunabc:zabbix-sender:0.0.5")
    runtimeOnly("ch.qos.logback:logback-classic")
}

java {
    sourceCompatibility = JavaVersion.toVersion("11")
    targetCompatibility = JavaVersion.toVersion("11")
}

micronaut {
    runtime("lambda_java")
    testRuntime("junit5")
    processing {
        incremental(true)
        annotations("agent_lambda.*")
    }
}



